#!/usr/bin/env bash
# script to install the nesono-bin package, which
# is a set of useful scripts not only for nesono groups developments
#
# Copyright (c) 2012, Jochen Issing <c.333+github@nesono.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -Eeuo pipefail

echo ""
echo "           INSTALL nesono-bin"
echo "Script to install the nesono-bin toolset"
echo "Does not overwrite existing configurations"
echo "Can be run multiple times (idempotent)"
echo ""
echo "The script is licensed under BSD license"
echo ""
echo "Legend:"
echo "  o : section"
echo "  oo: sub sections"
echo "  !!: changes"
echo "  i : info"
echo

echo "This script will not overwrite existing configurations but only set up"
echo "conigurations for shells that are installed and not already configured."
read -p "Continue? [Y/n] " ANSWER

if [[ "$ANSWER" == [nN]* ]]; then
    echo "Aborted by user"
    exit 0
fi
sleep 1

readonly scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $scriptdir/common/install_common.sh

# required to not forward this variable to subsequent scripts and for detection
# if installation succeeded.
unset NESONOBININSTALLATIONDIR

echo_info "Detected script directory: \"${scriptdir}\""
echo 

# function to install a link to a configuration file, e.g. ~/.vimrc
function install_link()
{
  DST=${1}
  SRC=${2}

  # check for bogus links - otherwise confusing existence check
  if [ -L "${DST}" ]; then
    # get target from link
    linktarget=$(readlink "${DST}")
    dirname=$(dirname "${DST}")

    if [ -n "${linktarget##/*}" ]; then
      # relative target found
      target=${dirname}/${linktarget}
    else
      # absolute target found
      target=${linktarget}
    fi

    if [ ! -e "${target}" ]; then
      echo_change "Removing bogus link: \"${DST}\" pointing to \"${target}\""
      rm "${DST}"
    fi
  fi
  if [ -e ${DST} ]; then
    echo_info "${DST} exists - not overwriting with nesono-bin version"
    if [ -L ${DST} ]; then
      TESTDST=`readlink ${DST}`
      echo "   ${DST} points to ${TESTDST}"
      echo ""
    fi
  else
    echo_change "Installing ${DST##*/}"
    ln -sf ${SRC} ${DST}
    echo "   ${SRC} points to ${DST}"
    echo ""
  fi
}

function install_plug()
{
  if [[ ! -e "$HOME/.vim/autoload/plug.vim" ]]; then
    echo_change "Installing Vim-Plug for vim"
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    echo_info "Next time starting vim, please run :PlugInstall"
  else
    echo_info "Vim-Plug already installed for Vim -- skipping"
  fi
  if [[ ! -e "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim ]]; then
    echo_change "Installing for NeoVim"
    sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
           https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    echo_info "Next time starting nvim, please run :PlugInstall"
  else
    echo_info "Vim-Plug already installed for NeoVim -- skipping"
  fi
}

echo_section "Setup shell configurations"
# Note that the shell invocations require a login shell, but no interative
# flag. That flag caused the shells to go into background on macOS and let the
# installation process freeze
pushd ${scriptdir} &> /dev/null
echo_sub_section "Bash"
[ -n "$(which bash)" ] && bash --login "$scriptdir/bashtils/install_nesono_bash" "$scriptdir"
echo
echo_sub_section "Zsh"
[ -n "$(which zsh)" ] && zsh --login "$scriptdir/zshtils/install_nesono_zsh" "$scriptdir"
echo
echo_sub_section "Fish"
[ -n "$(which fish)" ] && fish "$scriptdir/fishtils/install_nesono_fish" "$scriptdir"
popd &> /dev/null
echo

echo_section "Installing additional links"
install_link ~/.inputrc           ${scriptdir}/inputrc
install_link ~/.vimrc             ${scriptdir}/vimrc
install_link ~/.tmux.conf         ${scriptdir}/tmux.conf
install_link ~/.tmux              ${scriptdir}/tmux
install_link ~/.screenrc          ${scriptdir}/screenrc
install_link ~/.tigrc             ${scriptdir}/tigrc
install_link ~/.vim               ${scriptdir}/vim
install_link ~/.config/nvim       ${scriptdir}/nvim
install_link ~/.ackrc             ${scriptdir}/ackrc
install_link ~/.spacemacs         ${scriptdir}/spacemacs
install_link ~/.Xresources        ${scriptdir}/Xresources
install_link ~/.config/i3         ${scriptdir}/i3
install_link ~/.config/i3status   ${scriptdir}/i3status
install_link ~/.config/rofi       ${scriptdir}/rofi
install_link ~/.config/dunst      ${scriptdir}/dunst
install_link ~/.config/picom.conf ${scriptdir}/picom.conf
install_link ~/.config/alacritty  ${scriptdir}/alacritty

echo_section "Installing vim Plug"
echo_sub_section "Installing for vim"
install_plug


echo_section "Fetch/Update nesono-bin submodules"
pushd ${scriptdir} &> /dev/null
git submodule update --init
popd &> /dev/null
echo_info "Done, see you next time"
echo ""

