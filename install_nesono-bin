#!/usr/bin/env bash
# script to install the nesono-bin package, which
# is a set of useful scripts not only for nesono groups developments
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

echo ""
echo "           INSTALL nesono-bin"
echo "Script to install the nesono-bin toolset"
echo "Does not overwrite existing configurations"
echo "Can be run multiple times (idempotent)"
echo ""
echo "The script is licensed under BSD license"
echo ""
echo "Legend:"
echo "  ##: sections"
echo "  >>: sub sections"
echo "  **: work done"
echo "  ^^: remarks"
echo

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export SCRIPTDIR

echo "^^ Detected script directory: \"${SCRIPTDIR}\""
echo 

# function to install a link to a configuration file, e.g. ~/.vimrc
function install_link()
{
  DST=${1}
  SRC=${2}

  # check for bogus links - otherwise confusing existence check
  if [ -L "${DST}" ]; then
    # get target from link
    linktarget=$(readlink "${DST}")
    dirname=$(dirname "${DST}")

    if [ -n "${linktarget##/*}" ]; then
      # relative target found
      target=${dirname}/${linktarget}
    else
      # absolute target found
      target=${linktarget}
    fi

    if [ ! -e "${target}" ]; then
      echo "** Removing bogus link: \"${DST}\" pointing to \"${target}\""
      rm "${DST}"
    fi
  fi
  if [ -e ${DST} ]; then
    echo "^^ ${DST} exists - not overwriting with nesono-bin version"
    if [ -L ${DST} ]; then
      TESTDST=`readlink ${DST}`
      echo "   ${DST} points to ${TESTDST}"
      echo ""
    fi
  else
    echo "** Installing ${DST##*/}"
    ln -sf ${SRC} ${DST}
  fi
}

# needs to be run from within SCRIPTDIR
function install_fish()
{
  install_link ~/.config/fish ${SCRIPTDIR}/fish
  if [ "`readlink ~/.config/fish`" = "${SCRIPTDIR}/fish" -o ! -e "~/.config/fish" ]; then
    if [  -z "`grep -le 'fish/fishd.*' .gitignore`" ]; then
      echo 'fish/fishd.*' >> .gitignore
      git commit -m"ignore fish tmp files" .gitignore
    fi
  else
    echo "^^ Fish does not use nesono-bin configuration"
  fi
  ./fishtils/install_nesono_fish
}

echo "## Setup shell configurations (bash, zsh, fish)"
pushd ${SCRIPTDIR} &> /dev/null
echo ">> Bash"
[ -n "`which bash`" ] && ./bashtils/install_nesono_bash
echo
echo ">> Zsh"
[ -n "`which zsh`" ] && ./zshtils/install_nesono_zsh
echo
echo ">> Fish"
[ -n "`which fish`" ] && install_fish
popd &> /dev/null
echo

echo "## Installing additional links"
install_link ~/.inputrc   ${SCRIPTDIR}/inputrc
install_link ~/.vimrc     ${SCRIPTDIR}/vimrc
install_link ~/.tmux.conf ${SCRIPTDIR}/tmux.conf
install_link ~/.tmux      ${SCRIPTDIR}/tmux
install_link ~/.screenrc  ${SCRIPTDIR}/screenrc
install_link ~/.tigrc     ${SCRIPTDIR}/tigrc
install_link ~/.vim       ${SCRIPTDIR}/vim
install_link ~/.ackrc     ${SCRIPTDIR}/ackrc


echo "## Fetch/Update nesono-bin submodules"
pushd ${SCRIPTDIR} &> /dev/null
git submodule update --init
popd &> /dev/null
echo "^^ Done, see you next time"
echo ""

exit 0
