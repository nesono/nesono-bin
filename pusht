#!/usr/bin/env python

# BSD LICENSE
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import os      # environ
import getpass # getuser
import sys     # exit

session = os.environ['_NESONO_SESSION_COOKIE']
stackfilename = ('/tmp/%s.'+session+'.tstack')%(getpass.getuser())

stackfile = open( stackfilename, 'a+')
appname = os.path.basename(sys.argv.pop(0))
mode = 'cp -ri'

transfers = []

for item in sys.argv:
	if sys.argv[0] == '-h':
		print 'usage:', appname, '[mv|cp] file|dir [mv|cp] file|dir ...'
		print '    Default action is cp. You can add options (cp/mv)'
		print '    down the line to change the action on the fly'
		print '    Of course, you can not add files with the names'
		print '    mv and cp to the stack - but that is just bad luck ;)'
		sys.exit(0)

for item in sys.argv:
	if item == 'mv':
		mode = 'mv -i'
		continue
	if item == 'cp':
		mode = 'cp -ri'
		continue
	if os.path.exists( item ):
		fullpath = os.path.abspath( item )
		print mode,fullpath
		transfers.append( mode + ' ' + fullpath )
	else:
		print 'skipping',item,' - does no such file or directory'

stackfile.write( '\n'.join(transfers) )
stackfile.close()
sys.exit(0)

