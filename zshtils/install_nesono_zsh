# shellcheck disable=SC1071
#!/usr/bin/env zsh
#
# Copyright (c) 2025, Jochen Issing <c.333+github@nesono.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

scriptdir=$1

source $scriptdir/common/install_common.sh
ZSHRCFILE=~/.zshrc

# check, if login file does not exist (avoid menu for zsh setup)
if [ ! -e "${ZSHRCFILE}" ]; then
  echo_info "Loginfile: ${ZSHRCFILE} does not exist. Zsh will need to set it up first. Continue? [y/N]"
  read ANSWER
  if [ "$ANSWER" != "y" ]; then
      echo_info "Aborted"
      return 0
  fi
fi

# check if oh my zsh is already installed
if ! comman -v omz &>/dev/null; then
  echo_info "Installing Oh-my-zsh"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
  echo_info "Oh-my-zsh is already installed"
  return 0
fi

if [[ ! -d "~/powerlevel10k/" ]]; then
  echo_info "Installing theme powerlevel10k/powerlevel10k"
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
  echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
  echo 'ZSH_THEME="powerlevel10k/powerlevel10k"' >>~/.zshrc
fi

# source login file (dynamic detection doesn't work with zsh)
source "${ZSHRCFILE}"

if [[ -z "$(bindkey | grep edit-command-line)" ]]; then
  bindkey -s '^e' 'edit-command-line\n'
  {
    echo "autoload -Uz edit-command-line"
    echo "zle -N edit-command-line"
    echo "bindkey '^X^E' edit-command-line"
  } >> "${ZSHRCFILE}"
  echo_info "Key binding for edit-command-line added"
else
  echo_info "Key binding for edit-command-line already exists"
fi

# check if nesono-bin is already in path
if zsh --login "$scriptdir/common/nesono_bin_installed.sh" "$scriptdir"; then
  echo_info "${scriptdir} already in path... not installing nesono-bin"
else
  echo_change "Adding nesono-bin path to ${ZSHRCFILE}"
  cat >> ${ZSHRCFILE} <<-ENDOFSCRIPT

# the nesono script directory
export NESONOBININSTALLATIONDIR=${scriptdir}
[ -d "\${NESONOBININSTALLATIONDIR}" ] && export PATH=\${PATH}:\${NESONOBININSTALLATIONDIR}
# the nesono zsh extension
[ -f \${NESONOBININSTALLATIONDIR}/zshrc ] && . \${NESONOBININSTALLATIONDIR}/zshrc
ENDOFSCRIPT
  echo_info "Please close your zsh shell and start again to make change effective"
  echo_info "Installation for zsh done"
fi

