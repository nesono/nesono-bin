#!/usr/bin/env bash
# This is my preset for encodings with mencoder:
# written by iss
# date: 01.07.2002
# command line: dvd_rip2 outputfile
# bitrate must be between 4-16000...
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

APPNAME=$(basename $0)

DVDOPT="dvd://1"
GLOBALOPTS="-dvd-device /dev/dvd -ffourcc DX50"
# encopts include the range for encoding - not available with mplayer (mencoder only)
#ENCOPTS="-ss 00:44:00 -endpos 80"
#ENCOPTS="-endpos 80"

# set defaults:
CODEC=mpeg4
USE_PCM=0
USE_MP3=1
ALANG=en
MP3BITRATE=128
BITRATE=0
PASSNO=1
FORCE_OVERWRITE=0
USE_CROPPING=1
CROPPINGINFO="0"
DVD_DEVICE="/dev/dvd"

PLANESIZETEMPFILE=/tmp/${APPNAME}_cropdetection.txt

DEBUG_MARKER="dvd_rip2: ----> "

# now get the options:
while ( [ x${1} != "x" ] ); do
# echo "${DEBUG_MARKER} Checking $@"
  case "${1}" in
    -dev)
      # set the dvd device
      DVD_DEVICE=${2}
      shift
      ;;
    -pass)
      # in pass-mode option:
      case "${2}" in
        1)
          PASSNO=1
          ;;
        2)
          PASSNO=2
          ;;
        3)
          PASSNO=3
          ;;
        *)
          echo "${DEBUG_MARKER} Error in -pass option! Use 1,2 or 3 as pass option, not \"${3}\""
          exit -1
          ;;
      esac
      shift
      ;;
    -alang)
      case "${2}" in
        de|en|hu|es)
          # set audio language to specified one:
          ALANG=${2}
          ;;
        *)
          # error in setting audio language:
          echo "${DEBUG_MARKER} Error in setting audio language! Please specify a valid one!"
          exit -5;
          ;;
      esac
      shift
      ;;
    -mp3br)
      # setting mp3 bitrate:
      if [ ${2} -gt 32 ]; then
        MP3BITRATE=${2}
        USE_MP3=1
        USE_PCM=0
        USE_AC3=0
      else
        echo "${DEBUG_MARKER} Error in -mp3br option! Please specify a bitrate greater or equal 32"
        exit -2;
      fi
      shift
      ;;
    -pcm)
      # setting pcm audio:
      USE_PCM=1
      USE_MP3=0
      USE_AC3=0
      ;;
    -ac3)
      # setting ac3 audio:
      USE_PCM=0
      USE_MP3=0
      USE_AC3=1
      ;;
    -vbr)
      # setting video bitrate previously:
      if [ ${2} -gt 32 ]; then
        BITRATE=${2}
        shift
      else
        echo "${DEBUG_MARKER} Error in setting video bitrate (option -vbr), please specify bitrate greater 32"
        exit -3;
      fi
      ;;
    -force)
      # force overwriting the output file:
      FORCE_OVERWRITE=1
      ;;
    -vcodec)
      # choose a video codec:
      CODEC=${2}
      shift
      ;;
    -o)
      # choose the outputfile:
      if [ -n ${2} ]; then
        OUTPUTFILE=${2}
        shift
      else
        echo "${DEBUG_MARKER} Error in specifying output file, no file specified!!!"
        exit -4;
      fi
      ;;
    -ss)
      # specify start of encoding:
      ENCOPTS="${ENCOPTS} -ss ${2}"
      shift
      ;;
    -endpos)
      # specify end of encoding:
      ENCOPTS="${ENCOPTS} -endpos ${2}"
      shift
      ;;
    -nocrop)
      # don't use cropping
      USE_CROPPING=0
      ;;
    -crop)
      # get the cropping info <width>x<height>
      CROPPINGINFO="${2}"
      USE_CROPPING=1
      shift
      ;;
    -h)
      # printf help:
      echo ""
      echo "${APPNAME} usage: "
      echo "  -dev <dvd-device> (set the dvd device)"
      echo "  -pass <int(1,2,3)>"
      echo "  -dvd <int(dvd-chapter)>"
      echo "  -mp3br <int(>32)>"
      echo "  -pcm (use pcm audio, indicates raw audio)"
      echo "  -ac3 (use ac3 audio as it occurs on dvd - 5.1)"
      echo "  -vbr <int(>32) = video bitrate>"
      echo "  -force (force overwrite outputfile)"
      echo "  -vcodec <string(lavc-codec = video codec, x264, xvid)>"
      echo "  -o <string(outputfile)>"
      echo "  -ss <time of start encoding>"
      echo "  -endpos <time of end encoding>"
      echo "  -crop <width>:<height>"
      echo "    special values:"
      echo "    [  0: scaled d_width/d_height                               ]"
      echo "    [ -1: original width/height                                 ]"
      echo "    [ -2: Calculate w/h by other dimension and PRESCALED aspect ]"
      echo "    [ -3: Calculate w/h by other dimension and ORIGINAL  aspect ]"
      echo "  -h (help and exit)"
      echo "  ... (additional arguments NOT passed to mencoder)"
      echo ""
      exit 0;
      ;;
    -dvd)
      # specify dvd-chapter:
      DVDOPT="dvd://${2}"
      shift
      ;;
    *)
      # take additional options:
      REMAINING_OPTS=" ${REMAINING_OPTS} $@"
      ;;
   esac
   shift
done

case "x${CODEC}" in
  xx264)
    VIDEOOPTS="-sws 2 -ovc x264"
    ;;
  xxvid)
    VIDEOOPTS="-sws 2 -ovc xvid"
    ;;
  *)
    VIDEOOPTS="-sws 2 -ovc lavc"
    ;;
esac

if [ -z ${OUTPUTFILE} ];then
  echo "${DEBUG_MARKER} Error! No output file specified!!!"
  exit -6;
fi

#AUDIOOPTS="-aid 128"

if [ "x${USE_PCM}" == "x1" ];then
  AUDIOOPTS="${AUDIOOPTS} -alang ${ALANG} -oac pcm"
else
  if [ "x${USE_AC3}" == "x1" ]; then
    AUDIOOPTS="${AUDIOOPTS} -alang ${ALANG} -oac copy"
  else
    AUDIOOPTS="${AUDIOOPTS} -alang ${ALANG} -oac mp3lame -lameopts vbr=3:br=${MP3BITRATE}"
  fi
fi

if [ -f ${OUTPUTFILE} ]; then
  if [ ${FORCE_OVERWRITE} == 0 ]; then
    echo  -e "${DEBUG_MARKER} outputfile exists! Overwrite? [y/n]"
    read overwrite
    while ( test -z ${overwrite} ); do
      echo "${DEBUG_MARKER} Please answer y/n!"
      read overwrite
    done
    if [ ${overwrite} != "y" ]; then
      exit 1;
    fi
  fi
fi

GLOBALOPTS="${DVDOPT} ${GLOBALOPTS}"

echo "${DEBUG_MARKER} SUMMARY: pass: ${PASSNO}, audio lang: ${ALANG}, mp3bitrate: ${MP3BITRATE},"
echo "${DEBUG_MARKER}          use mp3: ${USE_MP3}, use pcm: ${USE_PCM}, use ac3: ${USE_AC3},"
echo "${DEBUG_MARKER}          video bitrate: ${BITRATE} force overwrite: ${FORCE_OVERWRITE}, outputfile: ${OUTPUTFILE}"
echo "${DEBUG_MARKER}          global opts: \"${GLOBALOPTS}\""
echo "${DEBUG_MARKER}          enc opts: \"${ENCOPTS}\""
echo "${DEBUG_MARKER}          cropping: ${USE_CROPPING} cropping-spec: ${CROPPINGINFO}"
echo "${DEBUG_MARKER}          "
echo "${DEBUG_MARKER}          remaining opts: \"${REMAINING_OPTS}\""
echo ""

if [ ${USE_CROPPING} != 0 ]; then
  # generating a cropdetect information file:
  echo    "${DEBUG_MARKER} writing cropdetection into tempfile: ${PLANESIZETEMPFILE}"
  echo -e "${DEBUG_MARKER} checking the croping information for cropping the image... (Press 'Q' to stop testing):\n\n"
  mplayer -vf cropdetect ${GLOBALOPTS} -ss 00:05:00 -vo null -ao null -frames 300 > ${PLANESIZETEMPFILE}
  echo -e "\n\n${DEBUG_MARKER} crop detection finished"

  #echo "please specify the crop information (width, height,centerx, centery):"
  #read CROPOPTS

  #cat ${PLANESIZETEMPFILE}

  # reading the cropdetection information out of the tempfile:
  widthlist=$(tail -n 10 ${PLANESIZETEMPFILE} | awk '/crop=/ {print ${22};}' | tr "):crop=" " " | awk '{ print ${1}; }')
  heightlist=$(tail -n 10 ${PLANESIZETEMPFILE} | awk '/crop=/ {print ${22};}' | tr "):crop=" " " | awk '{ print ${2}; }')
  centerxlist=$(tail -n 10 ${PLANESIZETEMPFILE} | awk '/crop=/ {print ${22};}' | tr "):crop=" " " | awk '{ print ${3}; }')
  centerylist=$(tail -n 10 ${PLANESIZETEMPFILE} | awk '/crop=/ {print ${22};}' | tr "):crop=" " " | awk '{ print ${4}; }')

  #echo "${DEBUG_MARKER} widthlist: ${widthlist}"
  #echo "${DEBUG_MARKER} heightlist: ${heightlist}"
  #echo "${DEBUG_MARKER} centerxlist: ${centerxlist}"
  #echo "${DEBUG_MARKER} centerylist: ${centerylist}"

  # get the first entry in each list as a startpoint:
  set ${widthlist}
  width=${1}
  set ${heightlist}
  height=${1}
  set ${centerxlist}
  centerx=${1}
  set ${centerylist}
  centery=${1}

  # get biggest width:
  #for tmpwidth in ${widthlist}; do
  #  if [ ${tmpwidth} > ${width} ]; then
  #    width=${tmpwidth}
  #  fi
  #done
  #
  ## get biggest height:
  #for tmpheight in ${heightlist}; do
  #  if [ ${tmpheight} > ${height} ]; then
  #    height=${tmpheight}
  #  fi
  #done

  #for tmpcenterx in ${centerxlist}; do
  #  if [ ${tmpcenterx} < ${centerx} ]; then
  #    centerx=${tmpcenterx}
  #  fi
  #done
  #
  #for tmpcentery in ${centerylist}; do
  #  if [ ${tmpcentery} < ${centery} ]; then
  #    centery=${tmpcentery}
  #  fi
  #done

  echo    "${DEBUG_MARKER} specified crop information (width, height,centerx, centery):"
  echo -e "${DEBUG_MARKER}                            ${width}:${height}:${centerx}:${centery}\n\n"

  CROPOPTS=${width}:${height}:${centerx}:${centery}
fi

if [ "x${CODEC}" == "xx264" ]; then
  # make width and height multiple of 16
  outwidth=${CROPPINGINFO%%:*}
  outheight=${CROPPINGINFO##*:}

  # defaults
  width_mod_16=${outwidth}
  height_mod_16=${outheight}

  if [ ${outwidth} -gt 0 ]; then
    widthx16=$((${outwidth}/16))
    width_mod_16=$((${widthx16}*16))
  fi
  if [ ${outheight} -gt 0 ]; then
    heightx16=$((${outheight}/16))
    height_mod_16=$((${heightx16}*16))
  fi
  CROPPINGINFO=${width_mod_16}:${height_mod_16}
fi

GLOBALOPTS="${GLOBALOPTS} ${ENCOPTS}"

if [ -n "${CROPOPTS}" ]; then
  echo "${DEBUG_MARKER} setting crop options to -vf crop=${CROPOPTS},scale=${CROPPINGINFO}"
  VIDEOOPTS="${VIDEOOPTS} -vf crop=${CROPOPTS},scale=${CROPPINGINFO}"
fi

case "x${CODEC}" in
  xx264)
  # use x264 for encoding

  echo "width_mod_16:  ${width_mod_16}"
  echo "height_mod_16: ${height_mod_16}"

  if [ x${PASSNO} == "x3" ]; then # use 3 pass encoding (2 pass video)
    rm -f frameno.avi
    echo "${DEBUG_MARKER} Encoding of DVD to ${OUTPUTFILE} with 3 pass mode"

    # with 3-pass encoding:
    echo "**************************** Encoding the avi file ****************************"
    echo "${DEBUG_MARKER} rm -f frameno.avi && mencoder ${GLOBALOPTS} -ovc frameno ${AUDIOOPTS} -o frameno.avi"
    mencoder ${GLOBALOPTS} -ovc frameno ${AUDIOOPTS} -o frameno.avi
    echo "${DEBUG_MARKER} please specify the bitrate you want to use for encoding:"
    if [ ${BITRATE} -lt 32 ];then
      read BITRATE
    fi
    if [ -n ${BITRATE} ]; then
    	echo "${DEBUG_MARKER} mencoder ${GLOBALOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8:pass=x -oac copy -o ${OUTPUTFILE}"
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8:pass=1 -oac copy -o ${OUTPUTFILE} && \
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8:pass=2 -oac copy -o ${OUTPUTFILE}
    fi
    rm -f frameno.avi
    echo "**************************** Encoding process finished..... ****************************"
  fi
  if [ x${PASSNO} == "x2" ]; then # use 2 pass encoding
    echo "${DEBUG_MARKER} Encoding of DVD to ${OUTPUTFILE} with 2 pass mode"

    # with 3-pass encoding:
    echo "**************************** Encoding the avi file ****************************"
    echo "### dvd_rip: please specify the bitrate you want to use for encoding:"
    if [ ${BITRATE} -lt 32 ];then
      read BITRATE
    fi
    if [ -n ${BITRATE} ]; then
    	echo "${DEBUG_MARKER} mencoder ${GLOBALOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8:pass=x -oac copy -o ${OUTPUTFILE}"
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8:pass=1 ${AUDIOOPTS} -o ${OUTPUTFILE} && \
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8:pass=2 ${AUDIOOPTS} -o ${OUTPUTFILE}
    fi
    echo "**************************** Encoding process finished..... ****************************"
  fi
  if [ x${PASSNO} == "x1" ]; then # use 1 pass encoding
    echo "${DEBUG_MARKER} Encoding of DVD to ${OUTPUTFILE} with one pass mode"

    # with 1-pass encoding:
    echo "**************************** Encoding the avi file ****************************"
    echo "${DEBUG_MARKER} please specify the bitrate you want to use for encoding:"
    if [ ${BITRATE} -lt 32 ];then
      read BITRATE
    fi
    if [ -n ${BITRATE} ]; then
    	echo "${DEBUG_MARKER} mencoder ${GLOBALOPTS} ${AUDIOOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8 -o ${OUTPUTFILE}"
    	mencoder ${GLOBALOPTS} ${AUDIOOPTS} ${VIDEOOPTS} -x264encopts bitrate=${BITRATE}:frameref=8 -o ${OUTPUTFILE}
    fi
    echo "**************************** Encoding process finished..... ****************************"
  fi
  ;;
  xxvid)
  # use xvid encoder for encoding
  ;;
  *)
  # use libavcodec for encoding
  if [ x${PASSNO} == "x3" ]; then # use 3 pass encoding (2 pass video)
    rm -f frameno.avi
    echo "${DEBUG_MARKER} Encoding of DVD to ${OUTPUTFILE} with 3 pass mode"

    # with 3-pass encoding:
    echo "**************************** Encoding the avi file ****************************"
    echo "${DEBUG_MARKER} rm -f frameno.avi && mencoder ${GLOBALOPTS} -ovc frameno ${AUDIOOPTS} -o frameno.avi"
    mencoder ${GLOBALOPTS} -ovc frameno ${AUDIOOPTS} -o frameno.avi
    echo "${DEBUG_MARKER} please specify the bitrate you want to use for encoding:"
    if [ ${BITRATE} -lt 32 ];then
      read BITRATE
    fi
    if [ -n ${BITRATE} ]; then
    	echo "${DEBUG_MARKER} mencoder ${GLOBALOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq:vpass=x -oac copy -o ${OUTPUTFILE}"
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq:vpass=1 -oac copy -o ${OUTPUTFILE} && \
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq:vpass=2 -oac copy -o ${OUTPUTFILE}
    fi
    rm -f frameno.avi
    echo "**************************** Encoding process finished..... ****************************"
  fi
  if [ x${PASSNO} == "x2" ]; then # use 2 pass encoding
    echo "${DEBUG_MARKER} Encoding of DVD to ${OUTPUTFILE} with 2 pass mode"

    # with 3-pass encoding:
    echo "**************************** Encoding the avi file ****************************"
    echo "### dvd_rip: please specify the bitrate you want to use for encoding:"
    if [ ${BITRATE} -lt 32 ];then
      read BITRATE
    fi
    if [ -n ${BITRATE} ]; then
    	echo "${DEBUG_MARKER} mencoder ${GLOBALOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq:vpass=x -oac copy -o ${OUTPUTFILE}"
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq:vpass=1 ${AUDIOOPTS} -o ${OUTPUTFILE} && \
    	mencoder ${GLOBALOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq:vpass=2 ${AUDIOOPTS} -o ${OUTPUTFILE}
    fi
    echo "**************************** Encoding process finished..... ****************************"
  fi
  if [ x${PASSNO} == "x1" ]; then # use 1 pass encoding
    echo "${DEBUG_MARKER} Encoding of DVD to ${OUTPUTFILE} with one pass mode"

    # with 1-pass encoding:
    echo "**************************** Encoding the avi file ****************************"
    echo "${DEBUG_MARKER} please specify the bitrate you want to use for encoding:"
    if [ ${BITRATE} -lt 32 ];then
      read BITRATE
    fi
    if [ -n ${BITRATE} ]; then
    	echo "${DEBUG_MARKER} mencoder ${GLOBALOPTS} ${AUDIOOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq -o ${OUTPUTFILE}"
    	mencoder ${GLOBALOPTS} ${AUDIOOPTS} ${VIDEOOPTS} -lavcopts vcodec=${CODEC}:vbitrate=${BITRATE}:vhq -o ${OUTPUTFILE}
    fi
    echo "**************************** Encoding process finished..... ****************************"
  fi
  ;;
esac

echo "${DEBUG_MARKER} output in ${OUTPUTFILE}"

exit 0
