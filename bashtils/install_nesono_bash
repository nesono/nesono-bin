#!/usr/bin/env bash
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

scriptdir=$1
source $scriptdir/common/install_common.sh

# the login file, we want to install the tools to
UNAME=`uname -s`
case ${UNAME} in
  Linux)
    LOGINFILE=~/.bash_profile
    if [ ! -r ${LOGINFILE} ]; then
      LOGINFILE=~/.bashrc
    fi
  ;;
  Darwin | FreeBSD)
    LOGINFILE=~/.profile
  ;;
  CYGWIN_* | MINGW32_* )
    LOGINFILE=~/.profile
  ;;
  *)
    echo_error "Unsupported system detected: $UNAME"
    echo_error "Not installing bashtils"
esac

if [ ! -e "${LOGINFILE}" ]; then
  echo_change "Creating loginfile: ${LOGINFILE} (needs to sourced in login script)"
  touch ${LOGINFILE}
fi

# check if already installed (needs to be login shell, since it enforces
# configuration file sourcing and interactive, since ~/.bashrc falls back to
# noop for non-interactive shells
bash --login "$scriptdir/common/nesono_bin_installed.sh" "$scriptdir"
if [ $? -eq 0 ]; then
  echo_info "${scriptdir} already in path... not installing nesono-bin"
else
  echo_change "Adding nesono-bin path to ${LOGINFILE}"
  cat >> ${LOGINFILE} <<-ENDOFSCRIPT
# the nesono script directory
export NESONOBININSTALLATIONDIR=${scriptdir}
[ -d "\${NESONOBININSTALLATIONDIR}" ] && export PATH=\${PATH}:\${NESONOBININSTALLATIONDIR}
# the nesono bash extension
[ -f \${NESONOBININSTALLATIONDIR}/bashrc ] && . \${NESONOBININSTALLATIONDIR}/bashrc
ENDOFSCRIPT
fi

bash --login "$scriptdir/common/nesono_bin_installed.sh" "$scriptdir"
if [ $? -eq 0 ]; then
  echo_info "Installation for bash done"
else
  echo_error "Installation failed. Please make sure that ${LOGINFILE} is sourced ad startup"
fi

