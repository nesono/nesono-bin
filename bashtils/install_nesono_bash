#!/usr/bin/env bash
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# the login file, we want to install the tools to
UNAME=`uname -s`
case ${UNAME} in
  Linux)
    LOGINFILE=~/.bash_profile
    if [ ! -r ${LOGINFILE} ]; then
      LOGINFILE=~/.bashrc
    fi
  ;;
  Darwin | FreeBSD)
    LOGINFILE=~/.profile
  ;;
  CYGWIN_* | MINGW32_* )
    LOGINFILE=~/.profile
  ;;
	*)
	  echo "unsupported system detected"
		echo "not installing bashtils"
esac

# check, if login file exists
if [ -e "${LOGINFILE}" ]; then
  echo "sourcing login file: ${LOGINFILE}"
  # source login file and check, if we are already in path
  . ${LOGINFILE}
else
  echo "creating loginfile: ${LOGINFILE} (needs to sourced in login script)"
  touch ${LOGINFILE}
fi

# add nesono-bin path to LOGINFILE
if [ -z "${NESONOBASHRC}" ]; then
  echo "adding nesono-bin path to ${LOGINFILE}"
  cat >> ${LOGINFILE} <<-ENDOFSCRIPT
# the nesono script directory
if [ -d ~/nesono-bin ]; then
  export PATH=\${PATH}:~/nesono-bin
fi
ENDOFSCRIPT
  echo "adding nesono-bin to current path"
  export PATH=${PATH}:~/nesono-bin
else
  echo "nesono-bin already in path... not installing nesono-bin"
fi

# add BASHRC extensions to login file
if [ -z "${NESONOBASHRC}" ]; then
  echo "adding bashrc to file: ${LOGINFILE}"
  cat >> ${LOGINFILE} <<-ENDOFSCRIPT
# the nesono bash extension
if [ -f ~/nesono-bin/bashrc ]; then
  . ~/nesono-bin/bashrc
fi
ENDOFSCRIPT
else
  echo "NESONOBASHRC already set - not installing ${LOGINFILE}"
fi
