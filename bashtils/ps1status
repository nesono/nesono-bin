#!/usr/bin/env bash
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Prompt setup, with SCM status
function parse_git_branch()
{
  # check if repo stat is disabled
  [ -n "${NESONO_NOREPO}" ] && return
	[ -x `which git`]          && return
  # get git repository status
  local DIRTY STATUS
  STATUS=$(git status --porcelain 2>/dev/null)
  [ $? -eq 128 ] && return
  [ -z "$(echo "$STATUS" | grep -e '^ [RDMA]')" ] || DIRTY="*"
  [ -z "$(echo "$STATUS" | grep -e '^?? ')"     ] || DIRTY="*"
  [ -z "$(echo "$STATUS" | grep -e '^[RMDA]')"  ] || DIRTY="${DIRTY}+"
  [ -z "$(git stash list)"                      ] || DIRTY="${DIRTY}^"
  AHEAD=$(git status 2>/dev/null | grep -e 'ahead of' | awk '{ print $9; }')
  [ -z "${AHEAD}"                               ] || DIRTY="${DIRTY}!"
  echo " (git: $(git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* //')$DIRTY)"
}

function parse_svn_revision()
{
  # check if repo stat is disabled
  [ -n "${NESONO_NOREPO}" ] && return
	[ -x `which svn`]          && return
  # get svn repository status
  local DIRTY REV=$(svn info 2>/dev/null | grep Revision | sed -e 's/Revision: //')
  [ "$REV" ] || return
  [ "$(svn st | grep -e '^ \?[MDA?] ')" ] && DIRTY='*'
  echo " (svn: r$REV$DIRTY)"
}

function parse_hg_branch()
{
  # check if repo stat is disabled
  [ -n "${NESONO_NOREPO}" ] && return
	[ -x `which hg`]          && return
  # get repo name
	BRANCH=`hg branch 2> /dev/null`
	[ $? -eq 255 ] && return
  STATUS=$(hg st 2>/dev/null)
  [ $? -eq 128 ] && return
  [ -z "$(echo "$STATUS" | grep -e '^[RDMA]')" ] || DIRTY="*"
  [ -z "$(echo "$STATUS" | grep -e '^? ')"     ] || DIRTY="*"
	echo " (hg: ${BRANCH}${DIRTY})"
}

# function to disable repository display in prompt
function norepo()
{
  export NESONO_NOREPO='1'
}

# function to reenable repository display in prompt
function repo()
{
  unset NESONO_NOREPO
}
