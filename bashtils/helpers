#!/bin/bash
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# function to create a directory and step into it
function cdmkdir()
{
  mkdir "$@"
  local path
  for path in "$@"; do
    # ignore any arguments
    if [[ "$path" = -* ]]; then :
    else
      cd "$path"
      return
    fi
  done
}

# function to create an absolute path from a relative one
function rel2abs()
{
  #echo "input: \"${1}\""
  # check, if argument is a file
  if [ -f "${1}" ]; then
    # directory name
    local dir="$(dirname "${1}")"
    #echo "dir: ${dir}"
    local file="$(basename "${1}")"
    #echo "file: ${file}"

    # change into dir
    pushd "${dir}" &> /dev/null
    local abspath="$(pwd)/${file}"
    echo "${abspath}"
    popd &> /dev/null
  fi
  if [ -d "${1}" ]; then
    # change into dir
    pushd "${1}" &> /dev/null
    local abspath="$(pwd)"
    echo "${abspath}"
    popd &> /dev/null
  fi

  return 0
}

# helper function to get the current users name (not using ${USER}, which could be corrupt)
function current_username()
{
  id | sed 's/uid=[0-9][0-9]*(\([a-zA-Z][a-zA-Z]*\)).*/\1/g'
}

# calculate something
function calc ()
{
  echo "$*" | bc -l
}

