#!/usr/bin/env bash
# script to edit a file with vim at a specified position
# which should be searched in a certain directory.
# usage: vimfind <dir> <file:pos>
# e.g.: vimfind ../ main.cpp:134            // to edit the file main.cpp, found in dir ../ at pos 134
#
# Copyright (c) 2012, Jochen Issing <iss@nesono.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if [ "$1" == "-h" ]; then
  echo "Usage: $0 <dir> <filename:pos>"
  exit 0
fi

if [ -z $1 ]; then
  echo "Usage: $0 <dir> <filename:pos>"
  exit 0
fi

if [ -z $2 ]; then
  echo "Usage: $0 <dir> <filename:pos>"
  exit 0
fi

SEARCHDIR=$1
#echo "searchdir: $SEARCHDIR"

# get filename
FILENAME=${2%%:*}
# get position
POS=${2##*:}
if [ "x$POS" != "x$FILENAME" ]; then
  POS="+$POS"
else
  POS=""
fi

NOFFILES=0
#FOUNDFILES=`find $SEARCHDIR -name $FILENAME`
for file in `find $SEARCHDIR -name $FILENAME`; do
  FOUNDFILES=$FOUNDFILES:$file
  NOFFILES=$(($NOFFILES+1))
  FILETABLE="$FILETABLE$NOFFILES: $file\n"
done
# remove leftmost colon
FOUNDFILES=${FOUNDFILES#:}

# check number of found files
case $NOFFILES in
  0)
  echo "no files found with filename $FILENAME"
  echo "exiting"
  exit -1
  ;;
  1)
  echo "found file: $FOUNDFILES"
  ;;
  *)
  echo    "multiple files found:"
  echo    "nof files:  $NOFFILES"
  echo -e "$FILETABLE"
  read -p 'please choose a file: ' SELECTED
  # validity checks
  if [ "$SELECTED" -gt "$NOFFILES" ]; then
    echo "filenumber exceeds number of files"
    exit -2
  fi
  if [ "x$SELECTED" == "x0" ]; then
    echo "filenumber 0 not supported!"
    exit -2
  fi
  # extract selected file
  while [ "$SELECTED" -gt "1" ]; do
    FOUNDFILES=${FOUNDFILES#*:}
    SELECTED=$(($SELECTED-1))
  done
  # remove remaining files behind selected one
  FOUNDFILES=${FOUNDFILES%%:*}
  ;;
esac

if [[ -n "EDITOR" ]]; then
	$EDITOR $FOUNDFILES $POS
else
	vim $FOUNDFILES $POS
fi


exit 0
